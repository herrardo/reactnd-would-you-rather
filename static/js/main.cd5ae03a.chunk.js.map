{"version":3,"sources":["logo.svg","utils/_DATA.js","actions/questions.js","actions/users.js","actions/authedUser.js","actions/shared.js","utils/api.js","App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","reducers/users.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","RECEIVE_QUESTIONS","RECEIVE_USERS","SET_AUTHED_USER","handleInitialData","dispatch","Promise","all","res","rej","setTimeout","then","type","tweets","receiveUsers","connect","authedUser","console","log","useEffect","className","combineReducers","state","action","logger","store","next","group","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd5ae03a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\n    answers: {\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\n      loxhs1bqm25b708cmbf3g: 'optionTwo',\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n    answers: {\n      vthrdm985a262al8qx3do: 'optionOne',\n      xj352vofupe1dqz9emx13r: 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n    answers: {\n      xj352vofupe1dqz9emx13r: 'optionOne',\n      vthrdm985a262al8qx3do: 'optionTwo',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  },\n};\n\nlet questions = {\n  '8xf0y6ziyjabvozdd253nd': {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory',\n    },\n  },\n  '6ni6ok3ym7mf1p33lnez': {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain',\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic',\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer',\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500',\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift',\n    },\n  },\n};\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","export const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\n\nexport const receiveQuestions = tweets => ({\n  type: RECEIVE_QUESTIONS,\n  tweets,\n});\n","export const RECEIVE_USERS = 'RECEIVE_USERS';\n\nexport const receiveUsers = users => ({\n  type: RECEIVE_USERS,\n  users,\n});\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\n\nexport const setAuthedUser = id => ({\n  type: SET_AUTHED_USER,\n  id,\n});\n","import { getInitialData } from '../utils/api';\nimport { receiveQuestions } from './questions';\nimport { receiveUsers } from './users';\nimport { setAuthedUser } from './authedUser';\n\nconst AUTHED_ID = 'tylermcginnis';\n\nexport function handleInitialData() {\n  return dispatch => {\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveQuestions(questions));\n      dispatch(receiveUsers(users));\n      dispatch(setAuthedUser(AUTHED_ID));\n    });\n  };\n}\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js';\n\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\n    users,\n    questions,\n  }));\n}\n\nexport function saveQuestion(info) {\n  return _saveQuestion(info);\n}\n\nexport function saveQuestionAnswer(info) {\n  return _saveQuestionAnswer(info);\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport { handleInitialData } from './actions/shared';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction App({ dispatch, authedUser, users }) {\n  console.log('authed', authedUser);\n  useEffect(() => {\n    dispatch(handleInitialData());\n  }, []);\n  return (\n    <div className='App'>\n      <div>Authed: {users['sarahedo'].avatarURL}</div>\n    </div>\n  );\n}\nApp.propTypes = {\n  dispatch: PropTypes.func,\n  authedUser: PropTypes.string,\n  users: PropTypes.object,\n};\nconst mapStateToProps = ({ authedUser, users }) => {\n  return {\n    authedUser,\n    users,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","import authedUser from './authedUser';\nimport questions from './questions';\nimport users from './users';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({ authedUser, questions, users });\n","import { SET_AUTHED_USER } from '../actions/authedUser';\n\nexport default function users(state = '', action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    default:\n      return state;\n  }\n}\n","import { RECEIVE_QUESTIONS } from '../actions/questions';\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      };\n    default:\n      return state;\n  }\n}\n","import { RECEIVE_USERS } from '../actions/users';\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users,\n      };\n    default:\n      return state;\n  }\n}\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.log('The action: ', action);\n  const result = next(action);\n  console.log('The new state: ', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\nimport logger from './logger';\n\nexport default applyMiddleware(thunk, logger);\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport middleware from './middleware';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}