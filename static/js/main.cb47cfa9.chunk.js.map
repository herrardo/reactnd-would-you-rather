{"version":3,"sources":["components/App.js","actions/authedUser.js","reducers/index.js","reducers/authedUser.js","middleware/logger.js","middleware/index.js","index.js"],"names":["App","useEffect","className","SET_AUTHED_USER","combineReducers","authedUser","state","action","type","id","logger","store","next","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"gOAaeA,EATH,WAEV,OADAC,qBAAU,cAAU,IAElB,cAAC,IAAD,UACE,qBAAKC,UAAU,OAAf,sC,+BCROC,EAAkB,kBCGhBC,kBAAgB,CAAEC,WCDlB,WAAsC,IAAvBC,EAAsB,uDAAd,KAAMC,EAAQ,uCAClD,OAAQA,EAAOC,MACb,KAAKL,EACH,OAAOI,EAAOE,GAChB,QACE,OAAOH,M,QCEEI,EATA,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAL,GAC9BM,QAAQC,MAAMP,EAAOC,MACrBK,QAAQE,IAAI,eAAgBR,GAC5B,IAAMS,EAASJ,EAAKL,GAGpB,OAFAM,QAAQE,IAAI,kBAAmBJ,EAAMM,YACrCJ,QAAQK,WACDF,KCFMG,cAAgBC,IAAOV,GCKhCC,EAAQU,YAAYC,EAASC,GAEnCC,IAASC,OACP,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.cb47cfa9.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  useEffect(() => {}, []);\n  return (\n    <Router>\n      <div className='page'>Resurrection Delorean</div>\n    </Router>\n  );\n};\n\nexport default App;\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\n\nexport const setAuthedUser = id => ({\n  type: SET_AUTHED_USER,\n  id,\n});\n","import authedUser from './authedUser';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({ authedUser });\n","import { SET_AUTHED_USER } from '../actions/authedUser';\n\nexport default function users(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    default:\n      return state;\n  }\n}\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.log('The action: ', action);\n  const result = next(action);\n  console.log('The new state: ', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\nimport logger from './logger';\n\nexport default applyMiddleware(thunk, logger);\n","import './index.css';\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport middleware from './middleware';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}